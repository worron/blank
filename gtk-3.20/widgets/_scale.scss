// Settings
$_slider_height: 16px;
$_slider_width: 6px;
$_slider_gap: 4px;

$_trough_width: 4px;
$_slider_margin_v: (($_slider_height - $_trough_width) / 2);

$_marks_length: 8px;
$_marks_distance: 2px;

$button_transition: all 200ms cubic-bezier(.25, .46, .45, .94);

$_scale_pad_v: $progressbar_pad_v;
$_scale_pad_h: $progressbar_pad_h;


// Classes
@mixin scale($_slider_bg_color: $bg_color) {
	$_slider_bg_dis_color: mix($bar_bg_color, $_slider_bg_color, 50%);

	trough {
		background-color: $bar_bg_color;
		&:disabled { background-color: $_slider_bg_dis_color; }

		menuitem:hover &,
		row:selected &,
		infobar & {
			highlight {
				background-color: lighten($selected_fg_color, 10%);
			}
		}
	}

	// The colored part of trough
	highlight {
		background-color: $selected_bg_color;
		&:disabled { background-color: $_slider_bg_dis_color; }
	}

	// this is another differently styled part of the trough, the most relevant use case is for example
	// in media player to indicate how much video stream as been cached
	fill {
		background-color: transparentize($selected_bg_color, .5);
		&:disabled { background-color: transparent; }
	}

	slider {
		border-style: solid;
		border-color: $_slider_bg_color;
		background-color: $slider_color;

		transition: $button_transition;
		transition-property: background;

		&:hover { background-color: lighten($slider_color, 10%); }

		&:disabled {
			background-color: $_slider_bg_dis_color;
		}
	}

	&.horizontal {
		padding: ($_scale_pad_v + $_slider_margin_v) $_scale_pad_h;

		slider {
			min-height: $_slider_height;
			min-width: $_slider_width;
			margin: (- $_slider_margin_v) 0;

			border-width: 0 $_slider_gap 0 $_slider_gap;
		}

		indicator {
			min-height: $_marks_length;
			min-width: 1px;
		}
	}

	&.vertical {
		padding: $_scale_pad_v ($_scale_pad_h + $_slider_margin_v);

		slider {
			min-height: $_slider_width;
			min-width: $_slider_height;

			margin: 0  (-$-slider_margin_v);
			border-width: $_slider_gap 0 $_slider_gap 0;
		}

		indicator {
			min-height: 1px;
			min-width: $_marks_length;
		}
	}

	value { color: alpha(currentColor, .7); }

	marks {
		color: alpha(currentColor, .5);
		@each $marks_class, $marks_pos, $marks_margin in (top, top, bottom),
			(bottom, bottom, top),
			(top, left, right),
			(bottom, right, left) {
			&.#{$marks_class} {
				margin-#{$marks_margin}: $_marks_distance;
				margin-#{$marks_pos}: -($_marks_distance + $_marks_length);
			}
		}
	}

	&.color {
		slider {
			border-style: none;
		}
	}
}

// Scale
scale {
	@include scale();
}
